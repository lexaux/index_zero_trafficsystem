@startuml

'skinparam monochrome true
skinparam classAttributeIconSize 0

interface ISimulationAware {
+tick(time:Time)
}

class Simulator {
+Simulator(Map, MapObjectCollection, SimParams)
+start()
+stop()
+pause()
-tick(): Uses Tick object
}

Simulator "1" o-left-> "*" ISimulationAware: Contains list of \nISimAware objects\n and runs ticks to it

class SimulationTick {
+number: int
+simulatedTimeStamp: LocalDateTime
+tickDurationSeconds: int
}

SimulationTick <-- Simulator:creates and sends to \nall 'Tick Aware' objects


class SimulationMap {
+tick(time:Time)
+addObject(MapObject, Position)
+removeObject(MapObject)
+moveObject(MapObject, Position)
-mapObjectCollection:Collection<MapObject>
}

SimulationMap --|> ISimulationAware


MapObject --|> ISimulationAware
SimulationMap "1" o--> "*" Feature
SimulationMap "1" o--> "*" MapObject

interface MapObject {
+tick(time:Time)
+getPosition():Position
+setMap(Map)
}

class Vehicle {
+tick(time:Time)
-speed
-acceleration
-lane
}

class Feature {
+tick(time:Time)
}

class Road {
    -lanes[]
    +tick()
}

class TrafficGenerator {
    +tick()
}

Vehicle --|> MapObject
Feature <|-- Road
Feature <|-left- TrafficGenerator


class SimulationDelay {
+tick()
}

ISimulationAware <|--SimulationDelay
Feature --|> ISimulationAware

@enduml