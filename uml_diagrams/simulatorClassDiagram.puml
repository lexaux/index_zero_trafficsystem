@startuml

'skinparam monochrome true
skinparam classAttributeIconSize 0

interface ISimulationAware {
+tick(time:Time)
}

class Simulator {
+Simulator(Map, MapObjectCollection, SimParams)
+start()
+stop()
+pause()
-tick(): Uses Tick object
}

Simulator "1" o-left-> "*" ISimulationAware: Contains list of \nISimAware objects\n and runs ticks to it

class SimulationTick {
+number: int
+simulatedTimeStamp: LocalDateTime
+tickDurationSeconds: int
}

SimulationTick <-- Simulator:creates and sends to \nall 'Tick Aware' objects


note right of Map: 'see' is the vision \n of the moving objects (vehicles)
class Map {
+tick(time:Time)
+addObject(MapObject, Position)
+removeObject(MapObject)
+moveObject(MapObject, Position)
-mapObjectCollection:Collection<MapObject>
}

Map --|> ISimulationAware

interface MapObject {
+tick(time:Time)
+getPosition():Position
+setMap(Map)
}

MapObject --|> ISimulationAware
Map "1" o--> "*" MapObject

class Vehicle {
+tick(time:Time)
+getPosition():Position
+setMap(Map)
-weightKilos: float
-position: Position
-map
-speed
-acceleration
-direction
-driverSpec:DriverStrategy
-route:MapRoute
}

MapObject <|-- Vehicle

class Obstacle {
+tick(time:Time) //noop for now!
+getPosition():Position
+setMap(Map)
-map:Map
-position:Position
}

MapObject <|-- Obstacle

class CarAdder {
}

class CarRemover {
}

class ImageProducer {
}

class SimulationDelay {
 }

ISimulationAware <|-left-CarAdder
ISimulationAware <|--CarRemover
ISimulationAware <|--SimulationDelay
ISimulationAware <|--ImageProducer


@enduml