@startuml

class GuiModel {
  -listeners:ChangeListener[]
  -image:BufferedImage
  -tick:currentTick
  -status:status
}

interface ChangeListener {
 +onModelChanged()
}

GuiModel "1" o-> "*" ChangeListener

class GuiController {
 -simulator
 -simulatorThread
 +start()
 +stop()
 +pause()
}

class SimulationImageProducer {
+tick()
}

class Primitives {
+drawLine(obj, pos, graphics)
+drawCurve(obj, pos, graphics)
+drawDoubleCrossRoad(obj, pos, graphics)
}

Simulator --> SimulationImageProducer: calls tick()


GuiModel <-- SimulationImageProducer:update model \nwith new\nimages
SimulationImageProducer -> Primitives


class Simulator {
+start()
+stop()
+pause()
}

GuiController --> Simulator: Thread, \ncreate,\ncommand

GuiController -> GuiModel: Update model state

class MainToolbar {
}

class MapPanel {
}

ChangeListener <|-- MainToolbar
ChangeListener <|-- MapPanel

MainToolbar <-- GuiModel
MapPanel <-- GuiModel

MainToolbar --> GuiController
@enduml